// IA Shark - Assistente agressivo e humanizado para an√°lise de loterias
// Baseado na personalidade Dark_Shark adaptada para o contexto de loterias

interface SharkPersonality {
  aggressive: string[];
  motivational: string[];
  technical: string[];
  warnings: string[];
  celebrations: string[];
}

interface SharkResponse {
  message: string;
  tone: 'aggressive' | 'motivational' | 'technical' | 'warning' | 'celebration';
  confidence: number;
}

class SharkAI {
  private personality: SharkPersonality = {
    aggressive: [
      "ü¶à ESCUTA AQUI, APOSTADOR! Os n√∫meros n√£o mentem, mas voc√™ pode estar perdendo tempo com estrat√©gias fracas!",
      "üî• AN√ÅLISE BRUTAL: Esses padr√µes mostram que voc√™ precisa ACORDAR para a realidade estat√≠stica!",
      "‚ö° CHEGA DE JOGAR NO ESCURO! Os dados est√£o GRITANDO as tend√™ncias e voc√™ n√£o est√° escutando!",
      "üö® ALERTA SHARK: Essa combina√ß√£o tem chance ZERO baseada nos √∫ltimos 50 sorteios!",
      "üíÄ SEM PIEDADE NOS N√öMEROS: As estat√≠sticas mostram que voc√™ est√° jogando como um AMADOR!",
      "üéØ MIRA CERTEIRA: Pare de apostar em n√∫meros frios h√° 3 meses, isso √© SUIC√çDIO estat√≠stico!",
      "üåä TSUNAMI DE REALIDADE: Seus palpites est√£o mais perdidos que turista em favela!",
      "üî™ CORTE ESSA: N√∫meros consecutivos? S√©rio? A probabilidade disso dar certo √© quase INEXISTENTE!"
    ],
    motivational: [
      "ü¶à VAMOS ARRASAR! Com essa an√°lise, voc√™ est√° 78% mais pr√≥ximo do jackpot!",
      "üî• FOCO NO RESULTADO! Essas estat√≠sticas s√£o sua ARMA SECRETA contra a sorte cega!",
      "‚≠ê VOC√ä TEM POTENCIAL! Seguindo essas tend√™ncias, suas chances TRIPLICARAM!",
      "üéØ NA MOSCA! Esses padr√µes mostram que voc√™ est√° no caminho certo para DOMINAR!",
      "üíé GARIMPEIRO DE OURO! Voc√™ encontrou uma PEPITA estat√≠stica valiosa!",
      "üöÄ DECOLANDO! Com essa estrat√©gia, voc√™ sai do B√ÅSICO e vai para o PROFISSIONAL!",
      "‚ö° ENERGIA SHARK! Essa combina√ß√£o tem FOR√áA para quebrar a sequ√™ncia de azar!",
      "üåü BRILHANDO! Voc√™ est√° usando a intelig√™ncia a seu favor, isso √© PODER!"
    ],
    technical: [
      "üìä AN√ÅLISE HARDCORE: Frequ√™ncia de 23% nos √∫ltimos 30 sorteios indica padr√£o FORTE!",
      "üî¨ DISSECANDO OS DADOS: Correla√ß√£o de 0.67 entre esses n√∫meros nos √∫ltimos 6 meses!",
      "üìà MATEM√ÅTICA PURA: Desvio padr√£o de 2.3 mostra que √© hora de ATACAR essa tend√™ncia!",
      "üßÆ CALCULADORA SHARK: Probabilidade condicional de 31% √© SUPERIOR √† m√©dia hist√≥rica!",
      "üìâ PADR√ÉO IDENTIFICADO: Ciclo de 15 sorteios detectado com precis√£o de 89%!",
      "üîç MICROSC√ìPIO LIGADO: An√°lise de regress√£o revela OPORTUNIDADE DOURADA!",
      "üìã RELAT√ìRIO T√âCNICO: Distribui√ß√£o qui-quadrado confirma ANOMALIA estat√≠stica favor√°vel!",
      "‚öôÔ∏è ENGENHARIA REVERSA: Algoritmo detectou BRECHA na aleatoriedade do sistema!"
    ],
    warnings: [
      "‚ö†Ô∏è PERIGO √Ä VISTA! Essa sequ√™ncia n√£o sai h√° 4 meses, pode ser ARMADILHA estat√≠stica!",
      "üö® ALERTA VERMELHO! Voc√™ est√° apostando contra 97% dos dados hist√≥ricos!",
      "‚ò†Ô∏è ZONA DE RISCO! Esses n√∫meros juntos t√™m hist√≥rico de DESASTRE total!",
      "üõë PARE AGORA! Essa estrat√©gia j√° FALHOU 12 vezes seguidas nos √∫ltimos sorteios!",
      "‚õî N√ÉO FA√áA ISSO! Probabilidade de 0.2% √© praticamente jogar dinheiro NO LIXO!",
      "üî¥ C√ìDIGO VERMELHO! Padr√£o de PERDEDOR detectado com 94% de certeza!",
      "‚ùå VETADO PELA IA! Essa combina√ß√£o √© ESTATISTICAMENTE SUICIDA!",
      "üö´ PROIBIDO SHARK! Os dados gritam N√ÉO para essa aposta!"
    ],
    celebrations: [
      "üéâ BINGO SHARK! Voc√™ acertou a ESTRAT√âGIA PERFEITA!",
      "üèÜ CAMPE√ÉO! Essa an√°lise √© DIGNA de um profissional das loterias!",
      "üí∞ CHUVA DE DINHEIRO! Com essa jogada, voc√™ est√° PRONTO para o milh√£o!",
      "üî• PEGOU FOGO! Combina√ß√£o DEVASTADORA detectada!",
      "‚ö° RAIO CERTEIRO! Voc√™ encontrou a F√ìRMULA do sucesso!",
      "üéØ TIRO CERTEIRO! Estrat√©gia APROVADA pelo algoritmo Shark!",
      "üíé DIAMANTE BRUTO! Voc√™ descobriu um padr√£o VALIOSO!",
      "ü¶à ATAQUE CERTEIRO! Essa √© a jogada que separa os VENCEDORES dos perdedores!"
    ]
  };

  // Analisa um conjunto de n√∫meros e retorna coment√°rio da IA Shark
  analyzeNumbers(numbers: number[], lotteryType: string, frequencies?: any[]): SharkResponse {
    const analysis = this.performDeepAnalysis(numbers, lotteryType, frequencies);
    
    let message = '';
    let tone: SharkResponse['tone'] = 'technical';
    let confidence = analysis.confidence;

    if (analysis.risk === 'high') {
      message = this.getRandomMessage('warnings');
      tone = 'warning';
      message += ` ${analysis.technicalComment}`;
    } else if (analysis.risk === 'low' && confidence > 0.8) {
      message = this.getRandomMessage('celebrations');
      tone = 'celebration';
      message += ` ${analysis.successComment}`;
    } else if (analysis.needsImprovement) {
      message = this.getRandomMessage('aggressive');
      tone = 'aggressive';
      message += ` ${analysis.improvementTip}`;
    } else {
      message = this.getRandomMessage('motivational');
      tone = 'motivational';
      message += ` ${analysis.encouragement}`;
    }

    return { message, tone, confidence };
  }

  // An√°lise de estrat√©gia do usu√°rio
  analyzeStrategy(strategy: string, results: any[]): SharkResponse {
    const performance = this.calculateStrategyPerformance(results);
    
    if (performance.winRate < 0.15) {
      return {
        message: this.getRandomMessage('aggressive') + ` Sua estrat√©gia atual tem taxa de acerto de ${(performance.winRate * 100).toFixed(1)}%. √â hora de MUDAR TUDO!`,
        tone: 'aggressive',
        confidence: 0.9
      };
    } else if (performance.winRate > 0.4) {
      return {
        message: this.getRandomMessage('celebrations') + ` Taxa de ${(performance.winRate * 100).toFixed(1)}% est√° ACIMA da m√©dia! Continue DEVASTANDO!`,
        tone: 'celebration',
        confidence: 0.85
      };
    } else {
      return {
        message: this.getRandomMessage('motivational') + ` Com ${(performance.winRate * 100).toFixed(1)}% de acerto, voc√™ est√° no caminho certo!`,
        tone: 'motivational',
        confidence: 0.7
      };
    }
  }

  // Coment√°rio sobre padr√µes encontrados
  commentOnPattern(patternType: string, strength: number): SharkResponse {
    const messages = {
      'consecutive': 'N√öMEROS CONSECUTIVOS detectados! Isso √© RARO, mas quando sai, FAZ BARULHO!',
      'even_odd': 'Equil√≠brio PARES/√çMPARES perfeito! Estatisticamente S√ìLIDO!',
      'hot_numbers': 'N√öMEROS QUENTES em a√ß√£o! Esses caras est√£o DOMINANDO os sorteios!',
      'cold_numbers': 'APOSTAR EM FRIOS? Corajoso! Podem estar ACUMULANDO energia!',
      'frequency_pattern': 'PADR√ÉO DE FREQU√äNCIA identificado! A matem√°tica est√° do seu lado!',
      'cyclic': 'CICLO DETECTADO! Os n√∫meros seguem um RITMO, e voc√™ descobriu!'
    };

    const baseMessage = messages[patternType as keyof typeof messages] || 'PADR√ÉO INTERESSANTE detectado!';
    
    let tone: SharkResponse['tone'] = 'technical';
    let prefix = '';

    if (strength > 0.8) {
      prefix = this.getRandomMessage('celebrations').split('!')[0] + '! ';
      tone = 'celebration';
    } else if (strength > 0.6) {
      prefix = this.getRandomMessage('motivational').split('!')[0] + '! ';
      tone = 'motivational';
    } else if (strength < 0.3) {
      prefix = this.getRandomMessage('warnings').split('!')[0] + '! ';
      tone = 'warning';
    }

    return {
      message: prefix + baseMessage + ` For√ßa do padr√£o: ${(strength * 100).toFixed(0)}%!`,
      tone,
      confidence: strength
    };
  }

  // Conselho sobre risco da aposta
  assessRisk(numbers: number[], historicalData: any[]): SharkResponse {
    const risk = this.calculateRisk(numbers, historicalData);
    
    if (risk > 0.8) {
      return {
        message: this.getRandomMessage('warnings') + ' RISCO EXTREMO detectado! Repense essa estrat√©gia!',
        tone: 'warning',
        confidence: risk
      };
    } else if (risk < 0.3) {
      return {
        message: this.getRandomMessage('celebrations') + ' RISCO BAIXO! Essa aposta tem FUNDAMENTO estat√≠stico!',
        tone: 'celebration',
        confidence: 1 - risk
      };
    } else {
      return {
        message: this.getRandomMessage('technical') + ` Risco moderado de ${(risk * 100).toFixed(0)}%. CALCULADO e CONSCIENTE!`,
        tone: 'technical',
        confidence: 0.6
      };
    }
  }

  // M√©todos auxiliares privados
  private performDeepAnalysis(numbers: number[], lotteryType: string, frequencies?: any[]) {
    // An√°lise simplificada para demonstra√ß√£o
    const consecutiveCount = this.countConsecutive(numbers);
    const evenOddRatio = this.calculateEvenOddRatio(numbers);
    const hotColdBalance = this.analyzeHotColdBalance(numbers, frequencies);
    
    const confidence = Math.min(0.9, (
      (consecutiveCount < 3 ? 0.3 : 0.1) +
      (Math.abs(evenOddRatio - 0.5) < 0.3 ? 0.4 : 0.2) +
      (hotColdBalance > 0.4 ? 0.3 : 0.1)
    ));

    const risk = consecutiveCount > 4 ? 'high' : confidence < 0.4 ? 'high' : 'low';
    const needsImprovement = confidence < 0.5;

    return {
      confidence,
      risk,
      needsImprovement,
      technicalComment: `An√°lise t√©cnica: ${consecutiveCount} consecutivos, ratio P/I: ${evenOddRatio.toFixed(2)}`,
      successComment: `Combina√ß√£o OTIMIZADA com ${(confidence * 100).toFixed(0)}% de for√ßa estat√≠stica!`,
      improvementTip: `Reduza consecutivos para ${Math.max(1, consecutiveCount - 2)} e melhore o equil√≠brio!`,
      encouragement: `Voc√™ est√° ${confidence > 0.6 ? 'ARRASANDO' : 'no caminho certo'}!`
    };
  }

  private calculateStrategyPerformance(results: any[]) {
    if (!results || results.length === 0) {
      return { winRate: 0.2, averageReturn: 0 };
    }

    const wins = results.filter(r => parseFloat(r.prizeWon || '0') > 0).length;
    return {
      winRate: wins / results.length,
      averageReturn: results.reduce((sum, r) => sum + parseFloat(r.prizeWon || '0'), 0) / results.length
    };
  }

  private calculateRisk(numbers: number[], historicalData: any[]) {
    // C√°lculo simplificado de risco baseado em padr√µes hist√≥ricos
    const consecutiveRisk = this.countConsecutive(numbers) > 3 ? 0.4 : 0.1;
    const frequencyRisk = numbers.length > 0 ? Math.random() * 0.3 : 0; // Placeholder
    const patternRisk = Math.random() * 0.3; // Placeholder para an√°lise de padr√µes
    
    return Math.min(0.95, consecutiveRisk + frequencyRisk + patternRisk);
  }

  private countConsecutive(numbers: number[]): number {
    if (numbers.length < 2) return 0;
    
    const sorted = [...numbers].sort((a, b) => a - b);
    let maxConsecutive = 1;
    let currentConsecutive = 1;
    
    for (let i = 1; i < sorted.length; i++) {
      if (sorted[i] === sorted[i-1] + 1) {
        currentConsecutive++;
      } else {
        maxConsecutive = Math.max(maxConsecutive, currentConsecutive);
        currentConsecutive = 1;
      }
    }
    
    return Math.max(maxConsecutive, currentConsecutive);
  }

  private calculateEvenOddRatio(numbers: number[]): number {
    if (numbers.length === 0) return 0.5;
    const evenCount = numbers.filter(n => n % 2 === 0).length;
    return evenCount / numbers.length;
  }

  private analyzeHotColdBalance(numbers: number[], frequencies?: any[]): number {
    if (!frequencies || frequencies.length === 0) return 0.5;
    
    // An√°lise simplificada do equil√≠brio entre n√∫meros quentes e frios
    const avgFrequency = frequencies.reduce((sum, f) => sum + (f.frequency || 0), 0) / frequencies.length;
    const numbersWithFreq = numbers.map(num => {
      const freq = frequencies.find(f => f.number === num);
      return freq ? freq.frequency : avgFrequency;
    });
    
    const balance = numbersWithFreq.reduce((sum, freq) => sum + Math.abs(freq - avgFrequency), 0);
    return Math.max(0, 1 - (balance / (avgFrequency * numbers.length)));
  }

  private getRandomMessage(type: keyof SharkPersonality): string {
    const messages = this.personality[type];
    return messages[Math.floor(Math.random() * messages.length)];
  }
}

// Inst√¢ncia singleton da IA Shark
export const sharkAI = new SharkAI();

// Hook para usar a IA Shark de forma reativa
export function useSharkAI() {
  return {
    analyzeNumbers: (numbers: number[], lotteryType: string, frequencies?: any[]) => 
      sharkAI.analyzeNumbers(numbers, lotteryType, frequencies),
    analyzeStrategy: (strategy: string, results: any[]) => 
      sharkAI.analyzeStrategy(strategy, results),
    commentOnPattern: (patternType: string, strength: number) => 
      sharkAI.commentOnPattern(patternType, strength),
    assessRisk: (numbers: number[], historicalData: any[]) => 
      sharkAI.assessRisk(numbers, historicalData)
  };
}